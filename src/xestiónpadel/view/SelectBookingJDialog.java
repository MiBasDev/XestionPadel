/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package xestiónpadel.view;

import javax.swing.JOptionPane;
import xestiónpadel.db.PadelManagerDB;
import xestiónpadel.model.Booking;
import xestiónpadel.model.PadelCourt;

/**
 * Clase que crea unha ventá para a xestión das reservas.
 *
 * @author Miguel Bastos Gándara.
 */
public class SelectBookingJDialog extends javax.swing.JDialog {

    private boolean actionAccepted;
    private int selectedTeam;
    private Booking[] bookings;

    /**
     * Se a acción do dialog foi aceptada ou non.
     *
     * @return True si aceptada, false se non.
     */
    public boolean isActionAccepted() {
        return actionAccepted;
    }

    /**
     * Devolve o equipo da reserva seleccionado.
     *
     * @return Equipo da reserva seleccionado.
     */
    public int getSelectedTeam() {
        return selectedTeam;
    }

    /**
     * Devolve a lista de reservas dispoñibles.
     *
     * @return Lista de reservas dispoñibles.
     */
    public Booking[] getBookings() {
        return bookings;
    }

    /**
     * Cambia a lista de reservas dispoñibles.
     *
     * @param bookings Lista de reservas dispoñibles.
     */
    public void setBookings(Booking[] bookings) {
        this.bookings = bookings;
        String[] bookingsToShow = new String[bookings.length];
        for (int i = 0; i < bookings.length; i++) {
            bookingsToShow[i] = bookings[i].getDescription();
        }
        jListBookings.setListData(bookingsToShow);
    }

    /**
     * Creates new form SelectBookingJDialog
     *
     * @param parent Pai do jDialog.
     * @param modal True si modal, false se non.
     */
    public SelectBookingJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.bookings = new Booking[PadelManagerDB.getBookings().size()];
    }

    /**
     * Devolve a reserva seleccionada na lista do jDialog.
     *
     * @return Reserva seleccionada na lista do jDialog.
     */
    public Booking getSelectedBooking() {
        return bookings[jListBookings.getSelectedIndex()];
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLblTitleText = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListBookings = new javax.swing.JList<>();
        jBtnCancel = new javax.swing.JButton();
        jBtnAccept = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Reservas");
        setMaximumSize(new java.awt.Dimension(586, 307));
        setMinimumSize(new java.awt.Dimension(586, 307));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLblTitleText.setText("Selecciona o partido ao que te queres unir:");

        jListBookings.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jListBookings);

        jBtnCancel.setText("Cancelar");
        jBtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelActionPerformed(evt);
            }
        });

        jBtnAccept.setText("Aceptar");
        jBtnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAcceptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBtnAccept)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnCancel))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLblTitleText, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLblTitleText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnCancel)
                    .addComponent(jBtnAccept))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAcceptActionPerformed
        if (jListBookings.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Debes seleccionar unha reserva", "Error na selección", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (getSelectedBooking().getCourt().getType() == PadelCourt.DOUBLE) {
                selectedTeam = Integer.parseInt(JOptionPane.showInputDialog(null, "Indica o equipo no que te queres apuntar (1/2)", "Elección de pista", JOptionPane.OK_CANCEL_OPTION));
            }
            actionAccepted = true;
            this.dispose();
        }
    }//GEN-LAST:event_jBtnAcceptActionPerformed

    private void jBtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelActionPerformed
        actionAccepted = false;
        this.dispose();
    }//GEN-LAST:event_jBtnCancelActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        actionAccepted = false;
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("GTK+".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectBookingJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectBookingJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectBookingJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectBookingJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SelectBookingJDialog dialog = new SelectBookingJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAccept;
    private javax.swing.JButton jBtnCancel;
    private javax.swing.JLabel jLblTitleText;
    private javax.swing.JList<String> jListBookings;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
